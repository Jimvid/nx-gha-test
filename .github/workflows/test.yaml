name: Frontend
on:
  pull_request:
    types: [opened, synchronize, reopened]
    # For now we only run the tests on FE changes.
    # Remove "paths" when we want the BE run the actions as well.
    paths:
      - "frontend/**"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-node-modules.outputs.cache-hit }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies if cache missed
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        working-directory: frontend

  format:
    name: check code formatting
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
      - run: npx nx format:check --all
        working-directory: frontend

  lint:
    name: lint code
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
      - run: npx nx run react:lint
        working-directory: frontend
  test:
    name: run tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
      - run: npx nx run react:test
        working-directory: frontend
  deploy:
    name: Deploy coverage report
    needs: setup
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
      - run: npx nx run react:test --coverage
        working-directory: frontend

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload the coverage directory from the repository
          path: "reports/coverage"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
